theme(legend.position = "none", axis.text.y = element_text(size = 7))
plotCtrF1 <- ggplot(dfmodalites_no_other, aes(y = Modalite, x = ctrF1)) +
geom_col(width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
# Utilisez seulement si vous souhaitez conserver le graphique des coordonnées sans la catégorie "Other"
ggarrange(plotCoordF1, plotCtrF1, ncol = 1, nrow = 2)
# Histogrammes pour les coordonnées des modalités
couleursCoords <- c("lightsalmon", "steelblue")
plotCoordF1 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF1),
x = CoordF1, fill = CoordF1 < 0)) +
geom_bar(stat = "identity", width = .6, alpha = .8, color = "black") +
geom_vline(xintercept = 0, color = "black", size = 1) +
scale_fill_manual(name = "Coordonnée", values = couleursCoords,
labels = c("Positive", "Négative")) +
labs(x = "Coordonnées sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1)) +
geom_bar(stat = "identity", width = .6, alpha = .8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
# Utilisez seulement si vous souhaitez conserver le graphique des coordonnées sans la catégorie "Other"
ggarrange(plotCoordF1, plotCtrF1, ncol = 1, nrow = 2)
res.mca = MCA(tea, quanti.sup=19, quali.sup=c(20:36))
res.acm = MCA(tea, quanti.sup=19, quali.sup=c(20:36))
# Construction d'un DataFrame pour les valeurs propres
dfACMvp <- data.frame(res.acm$eig)
names(dfACMvp) <- c("VP","VP_pct","VP_pctCumul")
dfACMvp$Axe <- factor(1:nrow(dfACMvp), levels=rev(1:nrow(dfACMvp)))
dfACMvp <- dfACMvp[,c(4,1:3)]
library(factoextra)
library(ggplot2)
fviz_screeplot(res.acm, addlabels = TRUE,
x="Composantes", y="Valeur propre", title="")
library(factoextra)
library(ggplot2)
couleursAxes <- c("steelblue","skyblue2")
g1 <- ggplot(dfACMvp,aes(x=VP, y=Axe))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black", fill="skyblue2")+
labs(x="Valeur propre", y="Axe factoriel")
g2 <- ggplot(dfACMvp, aes(x=VP_pct, y=Axe))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black", fill="skyblue2")+
theme(legend.position="none")+
labs(x="Variance expliquée (%)", y="Axe factoriel")
g3 <- ggplot(dfACMvp, aes(x=VP_pctCumul, y=Axe, group=1))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black", fill="skyblue2")+
geom_line(colour="brown", linetype="solid", size=.8) +
geom_point(size=3, shape=21, color="brown", fill="brown")+
theme(legend.position="none")+
labs(x="Variance expliquée (% cumulé)", y="Axe factoriel")
ggarrange(g2, g3,  nrow = 2)
library(stringr)
nAxes <- 3
dfmodalites <- data.frame(Modalite =rownames(res.acm$var$coord),
Coord = round(res.acm$var$coord[, 1:nAxes],3),
Cos2 = round(res.acm$var$cos2[, 1:nAxes],3),
ctr = round(res.acm$var$contrib[, 1:nAxes],3))
rownames(dfmodalites) <- 1:nrow(dfmodalites)
names(dfmodalites) <- str_replace(names(dfmodalites), ".Dim.", "F")
library(kableExtra)
library(stringr)
nAxes <- 3
dfmodalites <- data.frame(Modalite =rownames(res.acm$var$coord),
Coord = round(res.acm$var$coord[, 1:nAxes],2),
ctr = round(res.acm$var$contrib[, 1:nAxes],2),
Cos2 = round(res.acm$var$cos2[, 1:nAxes],2))
rownames(dfmodalites) <- 1:nrow(dfmodalites)
names(dfmodalites) <- str_replace(names(dfmodalites), ".Dim.", "F")
# Histogrammes pour les coordonnées des modalités
couleursCoords <- c("lightsalmon","steelblue")
plotCoordF1 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF1),
x = CoordF1, fill=CoordF1<0))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black")+
geom_vline(xintercept=0, color = "black", size=1)+
scale_fill_manual(name="Coordonnée",values=couleursCoords,
labels = c("Positive","Négative"))+
labs(x="Coordonnées sur l'axe 1", y="Modalité")+
theme(legend.position="none", axis.text.y = element_text(size = 7))
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black", fill="steelblue")+
labs(x="Contributions sur l'axe 1", y="Modalité")+
theme(legend.position="none", axis.text.y = element_text(size = 7))
ggarrange(plotCoordF1, plotCtrF1, ncol = 1, nrow = 2)
head(dfmodalites)
str(dfmodalites)
# Histogramme des coordonnées sur l'axe 1 sans regroupement sous "Other"
ggplot(dfmodalites, aes(y = Modalite, x = CoordF1)) +
geom_col(width = 0.6, alpha = 0.8, color = "black", fill = ifelse(dfmodalites$CoordF1 < 0, "lightsalmon", "steelblue")) +
geom_vline(xintercept = 0, color = "black", size = 1) +
labs(x = "Coordonnées sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
head(tea)
print(res.acm)
# Histogrammes pour les coordonnées des modalités sur l'axe 2
couleursCoords <- c("lightsalmon", "steelblue")
plotCoordF2 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF2),
x = CoordF2, fill = CoordF2 < 0)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black") +
geom_vline(xintercept = 0, color = "black", size = 1) +
scale_fill_manual(name = "Coordonnée", values = couleursCoords,
labels = c("Positive", "Négative")) +
labs(x = "Coordonnées sur l'axe 2", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
plotCtrF2 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF2), x = ctrF2)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 2", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
ggarrange(plotCoordF2, plotCtrF2, ncol = 1, nrow = 2)
fviz_mca_var(res.acm, repel = TRUE,
choice="var.cat",
axes = c(1, 2),
# col.var = "black",
title="", xlab="Axe 1", ylab="Axe 2",
ggtheme = theme_minimal ())
plotellipses(res.acm,keepvar=c(1:36))
#res.mca: le résultat d'une ACM
#keepvar: un vecteur d'index (ou de noms) des variables à
représenter
plotellipses(res.mca,keepvar=c(20:23))
#res.mca: le résultat d'une ACM
#keepvar: un vecteur d'index (ou de noms) des variables à
représenter
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
plot.MCA(res.mca, invisible=c("ind","quali.sup"), cex=0.7)
plot.MCA(res.mca, invisible=c("ind"))
plot.MCA(res.mca, invisible=c("ind", "var"))
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
fviz_mca_ind (res.acm,
label = "none",
habillage = "q12", # colorer par groupes
xlab="Axe 1", ylab="Axe 2", title="",
palette = c ("darkred", "steelblue", "gray23"),
ggtheme = theme_minimal ())
fviz_mca_ind (res.acm,
label = "none",
habillage = "sexe", # colorer par groupes
xlab="Axe 1", ylab="Axe 2", title="",
palette = c ("darkred", "steelblue"),
ggtheme = theme_minimal ())
fviz_mca_ind (res.acm,
+               label = "none",
fviz_mca_ind (res.acm,
label = "none",
habillage = "sex", # colorer par groupes
xlab="Axe 1", ylab="Axe 2", title="",
palette = c ("darkred", "steelblue"),
ggtheme = theme_minimal ())
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
data(tea)
res.mca = MCA(tea, quanti.sup=19, quali.sup=c(20:36))
res.acm = MCA(tea, quanti.sup=19, quali.sup=c(20:36))
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
fviz_mca_ind (res.acm,
label = "none",
habillage = "sex", # colorer par groupes
xlab="Axe 1", ylab="Axe 2", title="",
palette = c ("darkred", "steelblue"),
ggtheme = theme_minimal ())
groups <- cutree(res.mca, k = 3)
fviz_mca_ind(res.acm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
xlab="Axe 1", ylab="Axe 2", title="",
ggtheme = theme_minimal())
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), cex = 0.7, col.var = "age")
# Ajoutez deux couleurs supplémentaires au vecteur palette
palette_etendue <- c("darkred", "steelblue", "gray23", "green", "purple")
# Utilisez le vecteur palette étendu dans fviz_mca_ind
fviz_mca_ind(res.acm,
label = "none",
habillage = "age_Q", # colorer par groupes
xlab = "Axe 1", ylab = "Axe 2", title = "",
palette = palette_etendue,
ggtheme = theme_minimal ())
# Utilisez des couleurs vives et contrastées dans le vecteur palette
palette_vibrante <- c("#E41A1C", "#377EB8", "#4DAF4A", "#FF7F00", "#F781BF")
# Utilisez le vecteur palette vibrante dans fviz_mca_ind
fviz_mca_ind(res.acm,
label = "none",
habillage = "age_Q", # colorer par groupes
xlab = "Axe 1", ylab = "Axe 2", title = "",
palette = palette_vibrante,
ggtheme = theme_minimal ())
##########celui du dessus trés bien
# Histogrammes pour les coordonnées des modalités
couleursCoords <- c("lightsalmon","steelblue")
plotCoordF1 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF1),
x = CoordF1, fill=CoordF1<0))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black")+
geom_vline(xintercept=0, color = "black", size=1)+
scale_fill_manual(name="Coordonnée",values=couleursCoords,
labels = c("Positive","Négative"))+
labs(x="Coordonnées sur l'axe 1", y="Modalité")+
theme(legend.position="none", axis.text.y = element_text(size = 7))
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black", fill="steelblue")+
labs(x="Contributions sur l'axe 1", y="Modalité")+
theme(legend.position="none", axis.text.y = element_text(size = 7))
ggarrange(plotCoordF1, plotCtrF1, ncol = 1, nrow = 2)
couleursCoords <- c("lightsalmon","steelblue")
plotCoordF1 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF1),
x = CoordF1, fill=CoordF1<0))+
geom_bar(stat="identity", width = .6, alpha=.8, color="black")+
geom_vline(xintercept=0, color = "black", size=1)+
scale_fill_manual(name="Coordonnée",values=couleursCoords,
labels = c("Positive","Négative"))+
labs(x="Coordonnées sur l'axe 1", y="Modalité")+
theme(legend.position="none", axis.text.y = element_text(size = 7))
# Histogramme des coordonnées sur l'axe 1
plotCoordF1 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF1),
x = CoordF1, fill = CoordF1 < 0)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black") +
geom_vline(xintercept = 0, color = "black", size = 1) +
scale_fill_manual(name = "Coordonnée", values = couleursCoords,
labels = c("Positive", "Négative")) +
labs(x = "Coordonnées sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
# Affichage uniquement du premier graphique
print(plotCoordF1)
# Histogramme des coordonnées sur l'axe 1 avec texte modifié
plotCoordF1 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF1),
x = CoordF1, fill = CoordF1 < 0)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black") +
geom_vline(xintercept = 0, color = "black", size = 1) +
scale_fill_manual(name = "Coordonnée", values = couleursCoords,
labels = c("Positive", "Négative")) +
labs(x = "Coordonnées sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 10, color = "black"))
# Affichage du graphique modifié
print(plotCoordF1)
#######au dessus c'est bon
# Histogramme des coordonnées sur l'axe 2 avec texte modifié
plotCoordF2 <- ggplot(dfmodalites,
aes(y = reorder(Modalite, CoordF2),
x = CoordF2, fill = CoordF2 < 0)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black") +
geom_vline(xintercept = 0, color = "black", size = 1) +
scale_fill_manual(name = "Coordonnée", values = couleursCoords,
labels = c("Positive", "Négative")) +
labs(x = "Coordonnées sur l'axe 2", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 10, color = "black"))
# Affichage du graphique modifié pour l'axe 2
print(plotCoordF2)
savehistory("~/Desktop/adm4.Rhistory")
# Utilisez des couleurs vives et contrastées dans le vecteur palette
palette_vibrante <- c("#E41A1C", "#377EB8", "#4DAF4A", "#FF7F00", "#F781BF")
# Utilisez le vecteur palette vibrante dans fviz_mca_ind
fviz_mca_ind(res.acm,
label = "none",
habillage = "age_Q", # colorer par groupes
xlab = "Axe 1", ylab = "Axe 2", title = "",
palette = palette_vibrante,
ggtheme = theme_minimal ())
###essaie
# Utilisez des couleurs vives et contrastées dans le vecteur palette
palette_vibrante <- c("#E41A1C", "#377EB8", "#4DAF4A", "#FF7F00", "#F781BF")
# Utilisez le vecteur palette vibrante dans fviz_mca_ind avec les numéros d'individus
fviz_mca_ind(res.acm,
label = "none",
habillage = "age_Q", # colorer par groupes
addEllipses = TRUE, # Ajouter des ellipses de confiance
ellipse.type = "confidence", # Type d'ellipses
xlab = "Axe 1", ylab = "Axe 2", title = "",
palette = palette_vibrante,
ggtheme = theme_minimal ()) +
geom_text_repel(aes(label = rownames(res.acm$ind$coord)), # Ajouter les numéros d'individus
box.padding = 0.5, point.padding = 0.1) # Ajuster le positionnement du texte
install.packages("ggrepel")
library(ggrepel)
# Utilisez des couleurs vives et contrastées dans le vecteur palette
palette_vibrante <- c("#E41A1C", "#377EB8", "#4DAF4A", "#FF7F00", "#F781BF")
# Utilisez le vecteur palette vibrante dans fviz_mca_ind avec les numéros d'individus
fviz_mca_ind(res.acm,
label = "none",
habillage = "age_Q", # colorer par groupes
addEllipses = TRUE, # Ajouter des ellipses de confiance
ellipse.type = "confidence", # Type d'ellipses
xlab = "Axe 1", ylab = "Axe 2", title = "",
palette = palette_vibrante,
ggtheme = theme_minimal ()) +
geom_text_repel(aes(label = rownames(res.acm$ind$coord)), # Ajouter les numéros d'individus
box.padding = 0.5, point.padding = 0.1) # Ajuster le positionnement du texte
#faux
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
plot.MCA(res.mca, invisible=c("ind","quali.sup"), cex=0.7)
plot.MCA(res.mca, invisible=c("ind"))
plot.MCA(res.mca, invisible=c("ind", "var"))
fviz_mca_var(res.acm, repel = TRUE,
choice="var.cat",
axes = c(1, 2),
col.var = "gray23",
col.quali.sup = "darkred",
labelsize = 3,
title="", xlab="Axe 1", ylab="Axe 2",
ggtheme = theme_minimal ())
fviz_mca_var(res.acm, repel = TRUE,
choice="var.cat",
axes = c(1, 2),
# col.var = "black",
title="", xlab="Axe 1", ylab="Axe 2",
ggtheme = theme_minimal ())
library(factoextra)
library(ggplot2)
fviz_screeplot(res.acm, addlabels = TRUE,
x="Composantes", y="Valeur propre", title="")
tableau_valeurs_propres <- res.acm$eig
print(tableau_valeurs_propres)
dimdesc(res.mca)
print(tableau_valeurs_propres)
# Histogrammes pour les coordonnées des modalités
couleursCoords <- c("lightsalmon", "steelblue")
# Deuxième graphique uniquement
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
# Affichage du deuxième graphique
print(plotCtrF1)
# Histogrammes pour les coordonnées des modalités
couleursCoords <- c("lightsalmon", "steelblue")
# Deuxième graphique uniquement
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 10))
# Affichage du deuxième graphique
print(plotCtrF1)
# Histogramme des contributions sur l'axe 2
plotCtrF2 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF2), x = ctrF2)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 2", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 10))
# Affichage du deuxième graphique pour l'axe 2
print(plotCtrF2)
summary(res.mca$ind$coord[, 1:2])
# Sélection des contributions des variables sur l'axe 2
ctrF2_var <- res.mca$var$contrib[, 2]
# Création d'un data.frame pour la visualisation
df_ctrF2_var <- data.frame(Variable = rownames(ctrF2_var), Contribution = ctrF2_var)
# Sélection des contributions des variables sur l'axe 2
ctrF2_var <- res.mca$var$contrib[, 1:36]
# Sélection des contributions des variables sur l'axe 2
ctrF2_var <- as.data.frame(res.mca$var$contrib$Dim.2[, 1:36])
# Sélection des contributions des variables sur l'axe 2
ctrF2_var <- res.mca$var$contrib$Dim.2[, 1:36]
# Charger la bibliothèque FactoMineR si ce n'est pas déjà fait
# install.packages("FactoMineR")
library(FactoMineR)
# Calculer l'ACM
res.mca <- MCA(tea, quanti.sup = 19, quali.sup = c(20:36))
# Extraire les contributions des variables sur l'axe 2
ctrF2_var <- get_mca_var(res.mca)$contribDim$Dim.2[, 1:36]
# Somme des contributions par variable sur l'axe 2
ctrF2_var_sum <- rowSums(ctrF2_var)
# c) Corrélation entre la variable "age" et la deuxième dimension
cor(res.mca$var$coord[, "age"], res.mca$var$coord[, "Dim.2"]
)
# c) Corrélation entre la variable "age" et la deuxième dimension
cor(res.mca$var$coord[, "age"], res.mca$var$coord[, "Dim.2"])
# c) Corrélation entre la variable "age" et la deuxième dimension
cor(res.mca$var$coord[, "Dim.2"], res.mca$var$coord[, "age"])
# Contribution des variables aux dimensions
contrib_var <- res.mca$var$contrib
# Afficher la contribution des variables aux dimensions
print(contrib_var)
fviz_contrib(res.acm, choice = "var", axes = 1)
fviz_contrib(res.acm, choice = "ind", axes = 1)
library(FactoMineR)
groups <- cutree(res.mca, h = 0.1)
# Visualiser les individus dans le plan factoriel
plot.HCPC(res.hcpc, choice = "individual", title = "Individuals in Factorial Plan")
res.hcpc <- HCPC(tea, quanti.sup = 19, quali.sup = c(20:36))
res.hcpc <- HCPC(tea, quanti.sup = 19, quali.sup = c(20:36))
# Visualiser les individus dans le plan factoriel
plot.HCPC(res.hcpc, choice = "individual", title = "Individuals in Factorial Plan")
res.hcpc <- HCPC(tea, quanti.sup = 19, quali.sup = c(20:36))
res.hcpc <- HCPC(tea, quanti.sup = 19, quali.sup = c(20:36))
# Visualiser les individus dans le plan factoriel
plot.HCPC(res.hcpc, choice = "individual", title = "Individuals in Factorial Plan")
# Exemple : Identifier des groupes avec une proximité seuil de 0.1
groups <- cutree(res.mca, h = 0.1)
tea$group <- factor(groups)
View(tea)
> plot.MCA(res.mca, invisible=c("ind"))
plot.MCA(res.mca, invisible=c("ind"))
plot.MCA(res.mca, invisible=c("ind", "var"))
fviz_mca_var(res.acm, repel = TRUE,
choice="var.cat",
axes = c(1, 2),
col.var = "gray23",
col.quali.sup = "darkred",
labelsize = 3,
title="", xlab="Axe 1", ylab="Axe 2",
ggtheme = theme_minimal ())
#####dernier graphe partie 1
plot.MCA(res.mca, invisible=c("ind","quanti.sup"), cex=0.7)
plot.MCA(res.mca, invisible=c("quanti.sup"), cex=0.7)
plot.MCA(res.mca, invisible = c("ind", "quali.sup"), cex = 0.7)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), cex = 0.7)
plotellipses(res.mca,keepvar=c(20:23))
plotellipses(res.mca,keepvar=c(14))
plotellipses(res.mca,keepvar=c(23))
plotellipses(res.mca,keepvar=c(14))
plotellipses(res.mca,keepvar=c(17))
fviz_mca_ind (res.acm,
label = "none",
habillage = "where", # colorer par groupes
xlab="Axe 1", ylab="Axe 2", title="",
palette = c ("darkred", "steelblue", "gray23"),
ggtheme = theme_minimal ())
####code pour where au-dessus
plotellipses(res.mca,keepvar=c(17))
# Extraire les coordonnées et les contributions des individus pour l'axe 1
df_individus <- as.data.frame(res.mca$ind$coord)
df_individus$ctrF1 <- as.vector(res.mca$ind$contrib[, 1])
# Renommer les colonnes pour plus de clarté
colnames(df_individus) <- c("CoordF1", "CoordF2", "ctrF1")
# Créer des histogrammes pour les coordonnées des individus
couleursCoords <- c("lightsalmon", "steelblue")
plotCoordF1 <- ggplot(df_individus, aes(x = CoordF1, fill = CoordF1 < 0)) +
geom_histogram(binwidth = 0.1, alpha = 0.8, color = "black", position = "identity") +
geom_vline(xintercept = 0, color = "black", size = 1) +
scale_fill_manual(name = "Coordonnée", values = couleursCoords, labels = c("Positive", "Négative")) +
labs(x = "Coordonnées sur l'axe 1", y = "Fréquence") +
theme(legend.position = "none")
# Créer un histogramme pour les contributions des individus
plotCtrF1 <- ggplot(df_individus, aes(x = ctrF1)) +
geom_histogram(binwidth = 0.05, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Fréquence") +
theme(legend.position = "none")
# Afficher les histogrammes côte à côte
ggarrange(plotCoordF1, plotCtrF1, ncol = 1, nrow = 2)
dimdesc(res.mca)
plot.MCA(res.mca, invisible=c("var","quali.sup"), cex=0.7)
plot.MCA(res.mca, invisible=c("ind","quali.sup"), cex=0.7)
# Histogramme des contributions sur l'axe 2
plotCtrF2 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF2), x = ctrF2)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 2", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 10))
# Affichage du deuxième graphique pour l'axe 2
print(plotCtrF2)
#######le bon au-dessus
# Deuxième graphique uniquement
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 7))
# Affichage du deuxième graphique
print(plotCtrF1)
# Deuxième graphique uniquement
plotCtrF1 <- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1)) +
geom_bar(stat = "identity", width = 0.6, alpha = 0.8, color = "black", fill = "steelblue") +
labs(x = "Contributions sur l'axe 1", y = "Modalité") +
theme(legend.position = "none", axis.text.y = element_text(size = 10))
# Affichage du deuxième graphique
print(plotCtrF1)
# Pour la première dimension
var_dim1 <- get_mca_var(res.mca, dim = 1)
# Pour la première dimension
var_dim1 <- get_mca_var(res.mca, 1)
# Pour la première dimension
var_dim1 <- dimdesc(res.mca)$var$Dim.1
# Affichage des variables liées à la première dimension
print(var_dim1)
dimdesc(res.mca)
fviz_mca_ind (res.acm,
label = "none",
habillage = "How", # colorer par groupes
xlab="Axe 1", ylab="Axe 2", title="",
palette = c ("darkred", "steelblue", "gray23"),
ggtheme = theme_minimal ())
fviz_mca_ind(res.acm,
label = "none",
habillage = "How", # colorer par groupes
xlab = "Axe 1", ylab = "Axe 2", title = "",
palette = c("darkred", "steelblue", "gray23", "yellow"),
ggtheme = theme_minimal ())
plot.MCA(res.mca, invisible=c("ind", "var"))
#########pour le graphe vert
fviz_mca_var(res.acm, repel = TRUE,
choice="var.cat",
axes = c(1, 2),
col.var = "gray23",
col.quali.sup = "darkred",
labelsize = 3,
title="", xlab="Axe 1", ylab="Axe 2",
ggtheme = theme_minimal ())
plot.MCA(res.mca, invisible=c("ind"))
View(contrib_var)
plot(res.mca, choix="var")
plot(res.mca, choix="var")
dimdesc(res.mca)
library(FactoMineR)
dimdesc(res.mca)
str(res.mca)
var_coordinates <- res.mca$var$coord
plot(var_coordinates, pch = 19, col = "blue", main = "MCA - Variable plot")
View(res.mca)
View(res.mca)
View(g1)
git status
setwd("~/ADM4")
system("/usr/bin/git --version", intern = TRUE)
